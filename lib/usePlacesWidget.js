"use strict";var _extends=Object.assign||function(a){for(var b,c=1;c<arguments.length;c++)for(var d in b=arguments[c],b)Object.prototype.hasOwnProperty.call(b,d)&&(a[d]=b[d]);return a};Object.defineProperty(exports,"__esModule",{value:!0});exports.default=usePlacesWidget;var _react=require("react"),_utils=require("./utils"),_constants=require("./constants");function _objectWithoutProperties(a,b){var c={};for(var d in a)0<=b.indexOf(d)||Object.prototype.hasOwnProperty.call(a,d)&&(c[d]=a[d]);return c}function usePlacesWidget(a){var b=a.ref,c=a.onPlaceSelected,d=a.apiKey,e=a.inputAutocompleteValue,f=void 0===e?"new-password":e,g=a.options;g=void 0===g?{}:g;var h=g.types,i=void 0===h?["(cities)"]:h,j=g.componentRestrictions,k=g.fields,l=void 0===k?["address_components","geometry.location","place_id","formatted_address"]:k,m=g.bounds,n=_objectWithoutProperties(g,["types","componentRestrictions","fields","bounds"]),o=a.googleMapsScriptBaseUrl,p=void 0===o?_constants.GOOGLE_MAP_SCRIPT_BASE_URL:o,q=(0,_react.useRef)(null),r=(0,_react.useRef)(null),s=(0,_react.useRef)(null),t=(0,_react.useRef)(null),u=p+"?key="+d+"&libraries=places",v=(0,_react.useCallback)(function(){return(0,_utils.loadGoogleMapScript)(p,u)},[p,u]);return(0,_react.useEffect)(function(){var a=_extends({},n,{fields:l,types:i,bounds:m});if(j&&(a.componentRestrictions=j),!s.current&&q.current){b&&!b.current&&(b.current=q.current);var e=function(){// eslint-disable-next-line no-undef
// eslint-disable-next-line no-undef
return"undefined"==typeof google?console.error("Google has not been found. Make sure your provide apiKey prop."):!q.current instanceof HTMLInputElement?console.error("Input ref must be HTMLInputElement."):void(s.current=new google.maps.places.Autocomplete(q.current,a),r.current=s.current.addListener("place_changed",function(){c&&s&&s.current&&c(s.current.getPlace(),q.current,s.current)}))};return d?v().then(function(){return e()}):e(),function(){return r.current?r.current.remove():void 0}}},[]),(0,_react.useEffect)(function(){_utils.isBrowser&&window.MutationObserver&&q.current&&q.current instanceof HTMLInputElement&&(t.current=new MutationObserver(function(){t.current.disconnect(),q.current.autocomplete=f}),t.current.observe(q.current,{attributes:!0,attributeFilter:["autocomplete"]}))},[f]),(0,_react.useEffect)(function(){s.current&&s.current.setFields(l)},[l]),(0,_react.useEffect)(function(){s.current&&s.current.setBounds(m)},[m]),(0,_react.useEffect)(function(){s.current&&s.current.setComponentRestrictions(j)},[j]),(0,_react.useEffect)(function(){s.current&&s.current.setOptions(n)},[n]),{ref:q,autocompleteRef:s}}